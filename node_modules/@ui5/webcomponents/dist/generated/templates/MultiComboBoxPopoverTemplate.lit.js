/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => suffix ? html`<${scopeTag("ui5-responsive-popover", tags, suffix)} placement-type="Bottom" horizontal-align="Left" class="${classMap(context.classes.popover)}" hide-arrow _disable-initial-focus style="${styleMap(context.styles.suggestionsPopover)}" @ui5-selection-change=${ifDefined(context._listSelectionChange)} @ui5-after-close=${ifDefined(context._afterClosePicker)} @ui5-before-open=${ifDefined(context._beforeOpen)} @ui5-after-open=${ifDefined(context._afterOpenPicker)}>${ context._isPhone ? block1(context, tags, suffix) : undefined }${ !context._isPhone ? block6(context, tags, suffix) : undefined }${ context.filterSelected ? block11(context, tags, suffix) : block15(context, tags, suffix) }${ context._isPhone ? block19(context, tags, suffix) : undefined }</${scopeTag("ui5-responsive-popover", tags, suffix)}>${ context.hasValueStateMessage ? block20(context, tags, suffix) : undefined } ` : html`<ui5-responsive-popover placement-type="Bottom" horizontal-align="Left" class="${classMap(context.classes.popover)}" hide-arrow _disable-initial-focus style="${styleMap(context.styles.suggestionsPopover)}" @ui5-selection-change=${ifDefined(context._listSelectionChange)} @ui5-after-close=${ifDefined(context._afterClosePicker)} @ui5-before-open=${ifDefined(context._beforeOpen)} @ui5-after-open=${ifDefined(context._afterOpenPicker)}>${ context._isPhone ? block1(context, tags, suffix) : undefined }${ !context._isPhone ? block6(context, tags, suffix) : undefined }${ context.filterSelected ? block11(context, tags, suffix) : block15(context, tags, suffix) }${ context._isPhone ? block19(context, tags, suffix) : undefined }</ui5-responsive-popover>${ context.hasValueStateMessage ? block20(context, tags, suffix) : undefined } `;
const block1 = (context, tags, suffix) => suffix ? html`<div slot="header" class="ui5-responsive-popover-header" style="${styleMap(context.styles.popoverHeader)}"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><${scopeTag("ui5-button", tags, suffix)} class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context.handleCancel}"></${scopeTag("ui5-button", tags, suffix)}></div><div class="row"><div slot="header" class="input-root-phone" value-state="${ifDefined(context.valueState)}"><input .value="${ifDefined(context.value)}" inner-input placeholder="${ifDefined(context.placeholder)}" value-state="${ifDefined(context.valueState)}" @input="${context._inputLiveChange}" @change=${context._inputChange} @keydown=${context._onkeydown} aria-autocomplete="both" aria-labelledby="${ifDefined(context._id)}-hiddenText-nMore" aria-describedby="${ifDefined(context._id)}-valueStateDesc" /></div><${scopeTag("ui5-toggle-button", tags, suffix)} slot="header" class="ui5-multi-combobox-toggle-button" icon="multiselect-all" design="Transparent" ?pressed=${context._showAllItemsButtonPressed} @click="${context.filterSelectedItems}"></${scopeTag("ui5-toggle-button", tags, suffix)}></div>${ context.hasValueStateMessage ? block2(context, tags, suffix) : undefined }</div></div>` : html`<div slot="header" class="ui5-responsive-popover-header" style="${styleMap(context.styles.popoverHeader)}"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><ui5-button class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context.handleCancel}"></ui5-button></div><div class="row"><div slot="header" class="input-root-phone" value-state="${ifDefined(context.valueState)}"><input .value="${ifDefined(context.value)}" inner-input placeholder="${ifDefined(context.placeholder)}" value-state="${ifDefined(context.valueState)}" @input="${context._inputLiveChange}" @change=${context._inputChange} @keydown=${context._onkeydown} aria-autocomplete="both" aria-labelledby="${ifDefined(context._id)}-hiddenText-nMore" aria-describedby="${ifDefined(context._id)}-valueStateDesc" /></div><ui5-toggle-button slot="header" class="ui5-multi-combobox-toggle-button" icon="multiselect-all" design="Transparent" ?pressed=${context._showAllItemsButtonPressed} @click="${context.filterSelectedItems}"></ui5-toggle-button></div>${ context.hasValueStateMessage ? block2(context, tags, suffix) : undefined }</div></div>`;
const block2 = (context, tags, suffix) => suffix ? html`<div class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverValueStateMessage)}"><${scopeTag("ui5-icon", tags, suffix)} class="ui5-input-value-state-message-icon" name="${ifDefined(context._valueStateMessageIcon)}"></${scopeTag("ui5-icon", tags, suffix)}>${ context.shouldDisplayDefaultValueStateMessage ? block3(context, tags, suffix) : block4(context, tags, suffix) }</div>` : html`<div class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverValueStateMessage)}"><ui5-icon class="ui5-input-value-state-message-icon" name="${ifDefined(context._valueStateMessageIcon)}"></ui5-icon>${ context.shouldDisplayDefaultValueStateMessage ? block3(context, tags, suffix) : block4(context, tags, suffix) }</div>`;
const block3 = (context, tags, suffix) => html`${ifDefined(context.valueStateDefaultText)}`;
const block4 = (context, tags, suffix) => html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block5(item, index, context, tags, suffix)) }`;
const block5 = (item, index, context, tags, suffix) => html`${ifDefined(item)}`;
const block6 = (context, tags, suffix) => html`${ context.hasValueStateMessage ? block7(context, tags, suffix) : undefined }`;
const block7 = (context, tags, suffix) => suffix ? html`<div slot="header" @keydown="${context._onValueStateKeydown}" tabindex="0" class="ui5-responsive-popover-header ${classMap(context.classes.popoverValueState)}" style=${styleMap(context.styles.popoverValueStateMessage)}><${scopeTag("ui5-icon", tags, suffix)} class="ui5-input-value-state-message-icon" name="${ifDefined(context._valueStateMessageIcon)}"></${scopeTag("ui5-icon", tags, suffix)}>${ context.shouldDisplayDefaultValueStateMessage ? block8(context, tags, suffix) : block9(context, tags, suffix) }</div>` : html`<div slot="header" @keydown="${context._onValueStateKeydown}" tabindex="0" class="ui5-responsive-popover-header ${classMap(context.classes.popoverValueState)}" style=${styleMap(context.styles.popoverValueStateMessage)}><ui5-icon class="ui5-input-value-state-message-icon" name="${ifDefined(context._valueStateMessageIcon)}"></ui5-icon>${ context.shouldDisplayDefaultValueStateMessage ? block8(context, tags, suffix) : block9(context, tags, suffix) }</div>`;
const block8 = (context, tags, suffix) => html`${ifDefined(context.valueStateDefaultText)}`;
const block9 = (context, tags, suffix) => html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block10(item, index, context, tags, suffix)) }`;
const block10 = (item, index, context, tags, suffix) => html`${ifDefined(item)}`;
const block11 = (context, tags, suffix) => suffix ? html`<${scopeTag("ui5-list", tags, suffix)} separators="None" mode="MultiSelect" class="ui5-multi-combobox-all-items-list">${ repeat(context.selectedItems, (item, index) => item._id || index, (item, index) => block12(item, index, context, tags, suffix)) }</${scopeTag("ui5-list", tags, suffix)}>` : html`<ui5-list separators="None" mode="MultiSelect" class="ui5-multi-combobox-all-items-list">${ repeat(context.selectedItems, (item, index) => item._id || index, (item, index) => block12(item, index, context, tags, suffix)) }</ui5-list>`;
const block12 = (item, index, context, tags, suffix) => html`${ item.isGroupItem ? block13(item, index, context, tags, suffix) : block14(item, index, context, tags, suffix) }`;
const block13 = (item, index, context, tags, suffix) => suffix ? html`<${scopeTag("ui5-li-groupheader", tags, suffix)} data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</${scopeTag("ui5-li-groupheader", tags, suffix)}>` : html`<ui5-li-groupheader data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</ui5-li-groupheader>`;
const block14 = (item, index, context, tags, suffix) => suffix ? html`<${scopeTag("ui5-li", tags, suffix)} type="${ifDefined(context._listItemsType)}" additional-text=${ifDefined(item.additionalText)} ?selected=${item.selected} data-ui5-token-id="${ifDefined(item._id)}" data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</${scopeTag("ui5-li", tags, suffix)}>` : html`<ui5-li type="${ifDefined(context._listItemsType)}" additional-text=${ifDefined(item.additionalText)} ?selected=${item.selected} data-ui5-token-id="${ifDefined(item._id)}" data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</ui5-li>`;
const block15 = (context, tags, suffix) => suffix ? html`<${scopeTag("ui5-list", tags, suffix)} separators="None" mode="MultiSelect" class="ui5-multi-combobox-all-items-list">${ repeat(context._filteredItems, (item, index) => item._id || index, (item, index) => block16(item, index, context, tags, suffix)) }</${scopeTag("ui5-list", tags, suffix)}>` : html`<ui5-list separators="None" mode="MultiSelect" class="ui5-multi-combobox-all-items-list">${ repeat(context._filteredItems, (item, index) => item._id || index, (item, index) => block16(item, index, context, tags, suffix)) }</ui5-list>`;
const block16 = (item, index, context, tags, suffix) => html`${ item.isGroupItem ? block17(item, index, context, tags, suffix) : block18(item, index, context, tags, suffix) }`;
const block17 = (item, index, context, tags, suffix) => suffix ? html`<${scopeTag("ui5-li-groupheader", tags, suffix)} data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</${scopeTag("ui5-li-groupheader", tags, suffix)}>` : html`<ui5-li-groupheader data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</ui5-li-groupheader>`;
const block18 = (item, index, context, tags, suffix) => suffix ? html`<${scopeTag("ui5-li", tags, suffix)} type="${ifDefined(context._listItemsType)}" additional-text=${ifDefined(item.additionalText)} ?selected=${item.selected} data-ui5-token-id="${ifDefined(item._id)}" data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</${scopeTag("ui5-li", tags, suffix)}>` : html`<ui5-li type="${ifDefined(context._listItemsType)}" additional-text=${ifDefined(item.additionalText)} ?selected=${item.selected} data-ui5-token-id="${ifDefined(item._id)}" data-ui5-stable="${ifDefined(item.stableDomRef)}" @keydown="${context._onItemKeydown}">${ifDefined(item.text)}</ui5-li>`;
const block19 = (context, tags, suffix) => suffix ? html`<div slot="footer" class="ui5-responsive-popover-footer"><${scopeTag("ui5-button", tags, suffix)} design="Transparent" @click="${context.handleOK}">${ifDefined(context._dialogOkButton)}</${scopeTag("ui5-button", tags, suffix)}></div>` : html`<div slot="footer" class="ui5-responsive-popover-footer"><ui5-button design="Transparent" @click="${context.handleOK}">${ifDefined(context._dialogOkButton)}</ui5-button></div>`;
const block20 = (context, tags, suffix) => suffix ? html`<${scopeTag("ui5-popover", tags, suffix)} skip-registry-update _disable-initial-focus prevent-focus-restore hide-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom" horizontal-align="${ifDefined(context._valueStatePopoverHorizontalAlign)}"><div slot="header" class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverHeader)}"><${scopeTag("ui5-icon", tags, suffix)} class="ui5-input-value-state-message-icon" name="${ifDefined(context._valueStateMessageIcon)}"></${scopeTag("ui5-icon", tags, suffix)}>${ context.shouldDisplayDefaultValueStateMessage ? block21(context, tags, suffix) : block22(context, tags, suffix) }</div></${scopeTag("ui5-popover", tags, suffix)}>` : html`<ui5-popover skip-registry-update _disable-initial-focus prevent-focus-restore hide-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom" horizontal-align="${ifDefined(context._valueStatePopoverHorizontalAlign)}"><div slot="header" class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverHeader)}"><ui5-icon class="ui5-input-value-state-message-icon" name="${ifDefined(context._valueStateMessageIcon)}"></ui5-icon>${ context.shouldDisplayDefaultValueStateMessage ? block21(context, tags, suffix) : block22(context, tags, suffix) }</div></ui5-popover>`;
const block21 = (context, tags, suffix) => html`${ifDefined(context.valueStateDefaultText)}`;
const block22 = (context, tags, suffix) => html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block23(item, index, context, tags, suffix)) }`;
const block23 = (item, index, context, tags, suffix) => html`${ifDefined(item)}`;


export default block0;