/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => html`<div id="${ifDefined(context._id)}" class="${ifDefined(context.stripClasses)}" tabindex="-1" role="tab" aria-posinset="${ifDefined(context._posinset)}" aria-setsize="${ifDefined(context._setsize)}" aria-controls="ui5-tc-content" aria-selected="${ifDefined(context.effectiveSelected)}" aria-disabled="${ifDefined(context.effectiveDisabled)}" ?disabled="${context.effectiveDisabled}" aria-labelledby="${ifDefined(context.ariaLabelledBy)}" data-ui5-stable="${ifDefined(context.stableDomRef)}" ._realTab="${ifDefined(context)}">${ context.icon ? block1(context, tags, suffix) : undefined }${ context._designDescription ? block2(context, tags, suffix) : undefined }<div class="ui5-tab-strip-itemContent">${ !context._isInline ? block3(context, tags, suffix) : undefined }${ context.text ? block5(context, tags, suffix) : undefined }</div>${ context.requiresExpandButton ? block8(context, tags, suffix) : undefined } `;
const block1 = (context, tags, suffix) => suffix ? html`<div class="ui5-tab-strip-item-icon-outer"><${scopeTag("ui5-icon", tags, suffix)} id="${ifDefined(context._id)}-icon" name="${ifDefined(context.icon)}" class="ui5-tab-strip-item-icon"></${scopeTag("ui5-icon", tags, suffix)}></div>` : html`<div class="ui5-tab-strip-item-icon-outer"><ui5-icon id="${ifDefined(context._id)}-icon" name="${ifDefined(context.icon)}" class="ui5-tab-strip-item-icon"></ui5-icon></div>`;
const block2 = (context, tags, suffix) => html`<div id="${ifDefined(context._id)}-designDescription" class="ui5-tab-strip-design-description">${ifDefined(context._designDescription)}</div>`;
const block3 = (context, tags, suffix) => html`${ context.additionalText ? block4(context, tags, suffix) : undefined }`;
const block4 = (context, tags, suffix) => html`<span class="ui5-tab-strip-itemAdditionalText" id="${ifDefined(context._id)}-additionalText">${ifDefined(context.additionalText)}</span>`;
const block5 = (context, tags, suffix) => html`<span class="ui5-tab-strip-itemText" id="${ifDefined(context._id)}-text">${ context.semanticIconName ? block6(context, tags, suffix) : undefined }${ifDefined(context.displayText)}${ context.isSingleClickArea ? block7(context, tags, suffix) : undefined }</span>`;
const block6 = (context, tags, suffix) => suffix ? html`<${scopeTag("ui5-icon", tags, suffix)} class="${ifDefined(context.semanticIconClasses)}" name="${ifDefined(context.semanticIconName)}"></${scopeTag("ui5-icon", tags, suffix)}>` : html`<ui5-icon class="${ifDefined(context.semanticIconClasses)}" name="${ifDefined(context.semanticIconName)}"></ui5-icon>`;
const block7 = (context, tags, suffix) => suffix ? html`<span class="ui5-tab-single-click-icon"><${scopeTag("ui5-icon", tags, suffix)} name="slim-arrow-down"></${scopeTag("ui5-icon", tags, suffix)}></span>` : html`<span class="ui5-tab-single-click-icon"><ui5-icon name="slim-arrow-down"></ui5-icon></span>`;
const block8 = (context, tags, suffix) => suffix ? html`<div class="ui5-tab-expand-button" @click="${context._onTabExpandButtonClick}"><${scopeTag("ui5-button", tags, suffix)} .tab=${ifDefined(context)} icon="slim-arrow-down" design="Transparent" tabindex="-1" ?disabled="${context.disabled}" tooltip="${ifDefined(context.expandButtonTitle)}" aria-haspopup="Menu"></${scopeTag("ui5-button", tags, suffix)}></div>` : html`<div class="ui5-tab-expand-button" @click="${context._onTabExpandButtonClick}"><ui5-button .tab=${ifDefined(context)} icon="slim-arrow-down" design="Transparent" tabindex="-1" ?disabled="${context.disabled}" tooltip="${ifDefined(context.expandButtonTitle)}" aria-haspopup="Menu"></ui5-button></div>`;


export default block0;